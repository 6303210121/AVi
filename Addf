
import paramiko
import json
import requests

# Function to execute CLI command on Nexus switch
def get_switch_info(host, username, password, command):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(host, username=username, password=password)
    stdin, stdout, stderr = ssh.exec_command(command)
    output = stdout.read().decode()
    ssh.close()
    return output

# Function to parse CLI output (customize based on your needs)
def parse_output(output):
    # Example parsing logic
    data = {}
    lines = output.splitlines()
    for line in lines:
        # Custom parsing logic
        pass
    return data

# Function to import data into NetBox
def import_to_netbox(data, netbox_url, token):
    headers = {'Authorization': f'Token {token}', 'Content-Type': 'application/json'}
    response = requests.post(f'{netbox_url}/api/dcim/devices/', headers=headers, data=json.dumps(data))
    return response.status_code, response.text

# Function to fetch router details from NetBox
def fetch_router_details(netbox_url, token):
    headers = {'Authorization': f'Token {token}'}
    response = requests.get(f'{netbox_url}/api/dcim/devices/', headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Failed to fetch data from NetBox: {response.status_code}, {response.text}")
        return None

# Main script
if __name__ == "__main__":
    host = 'nexus-switch-ip'
    username = 'your-username'
    password = 'your-password'
    command = 'show version'  # Example command
    
    # Collect data from Nexus switch
    cli_output = get_switch_info(host, username, password, command)
    
    # Parse the CLI output
    parsed_data = parse_output(cli_output)
    
    # NetBox configuration
    netbox_url = 'http://netbox-url'
    netbox_token = 'your-netbox-api-token'
    
    # Import data into NetBox
    status, response = import_to_netbox(parsed_data, netbox_url, netbox_token)
    
    print(f'Status: {status}, Response: {response}')
    
    # Fetch router details from NetBox
    router_details = fetch_router_details(netbox_url, netbox_token)
    
    if router_details:
        print(json.dumps(router_details, indent=4))
