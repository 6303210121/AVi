
import paramiko
import json
import requests

# Function to execute CLI command on Nexus switch
def get_switch_info(host, username, password, command):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(host, username=username, password=password)
    stdin, stdout, stderr = ssh.exec_command(command)
    output = stdout.read().decode()
    ssh.close()
    return output

# Function to parse CLI output
def parse_output(output):
    data = {}
    lines = output.splitlines()
    for line in lines:
        # Debug: Print each line being parsed
        print(f"Parsing line: {line}")

        # Example: Check for a specific string that might indicate the version
        if 'NXOS' in line:  # Example condition, adjust as needed
            try:
                version = line.split('[')[1].split(']')[0]
                data['version'] = version
            except IndexError:
                print(f"Error parsing line: {line}")
                continue
    return data

# Function to import data into NetBox
def import_to_netbox(data, netbox_url, token):
    headers = {'Authorization': f'Token {token}', 'Content-Type': 'application/json'}
    response = requests.post(f'{netbox_url}/api/dcim/devices/', headers=headers, data=json.dumps(data))
    return response.status_code, response.text

# Main script
if __name__ == "__main__":
    host = '10.133.35.148'
    username = 'admin'
    password = 'tcs123'
    command = 'show version'  # Example command
    
    # Collect data from Nexus switch
    cli_output = get_switch_info(host, username, password, command)
    
    # Parse the CLI output
    parsed_data = parse_output(cli_output)
    
    # NetBox configuration
    netbox_url = 'http://10.133.35.137:8000'
    netbox_token = 'your-netbox-api-token'
    
    # Import data into NetBox
    status, response = import_to_netbox(parsed_data, netbox_url, netbox_token)
    
    print(f'Status: {status}, Response: {response}')
